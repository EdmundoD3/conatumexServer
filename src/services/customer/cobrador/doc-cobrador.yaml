openapi: 3.0.0
info:
  title: Cobranza API
  description: API para gestionar las operaciones de cobranza.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local de desarrollo

paths:
  /cobranza/get-all-purchases:
    get:
      summary: Obtiene todas las compras activas del cobrador.
      description: Retorna una lista de compras activas asociadas al cobrador autenticado.
      tags:
        - Cobrador
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de compras activas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      client:
                        type: array
                        items:
                          $ref: '#/components/schemas/PurchaseModelRes'
                      dateUpdate:
                        type: string
                        format: date-time
        '400':
          description: Solicitud inválida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Solicitud inválida"
        '401':
          description: No autorizado (token inválido o no proporcionado).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No autorizado"
        '403':
          description: Acceso denegado (roles no válidos).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Acceso denegado"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error interno del servidor"

  /cobranza/get-last-date-update:
    post:
      summary: Obtiene las compras actualizadas desde una fecha específica.
      description: Retorna las compras que han sido actualizadas después de la fecha proporcionada.
      tags:
        - Cobrador
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lastDateUpdate:
                  type: string
                  format: date-time
                  description: Fecha a partir de la cual se buscan actualizaciones.
      responses:
        '200':
          description: Lista de compras actualizadas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      purchases:
                        type: array
                        items:
                          $ref: '#/components/schemas/PurchaseModelRes'
                      dateUpdate:
                        type: string
                        format: date-time
        '400':
          description: Solicitud inválida (fecha no proporcionada o en formato incorrecto).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Solicitud inválida"
        '401':
          description: No autorizado (token inválido o no proporcionado).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No autorizado"
        '403':
          description: Acceso denegado (roles no válidos).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Acceso denegado"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error interno del servidor"

  /cobranza/update-purchases:
    post:
      summary: Actualiza las compras del cobrador.
      description: Permite al cobrador actualizar las compras asociadas a su cuenta.
      tags:
        - Cobrador
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/PurchaseUpdateModel'
      responses:
        '200':
          description: Compras actualizadas correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      dateUpdate:
                        type: string
                        format: date-time
        '400':
          description: Solicitud inválida (datos no proporcionados o en formato incorrecto).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Solicitud inválida"
        '401':
          description: No autorizado (token inválido o no proporcionado).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No autorizado"
        '403':
          description: Acceso denegado (roles no válidos).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Acceso denegado"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error interno del servidor"

  /cobranza/ischange:
    post:
      summary: Verifica si las compras han cambiado de cobrador.
      description: Retorna las compras que han sido asignadas a otro cobrador.
      tags:
        - Cobrador
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: string
                    description: ID de la compra.
      responses:
        '200':
          description: Compras que han cambiado de cobrador.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      dateUpdate:
                        type: string
                        format: date-time
        '400':
          description: Solicitud inválida (datos no proporcionados o en formato incorrecto).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Solicitud inválida"
        '401':
          description: No autorizado (token inválido o no proporcionado).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No autorizado"
        '403':
          description: Acceso denegado (roles no válidos).
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Acceso denegado"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error interno del servidor"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CiudadModelRes:
      type: object
      properties:
        ciudad:
          type: string
        ciudadId:
          type: string
      tags:
        - Ubicación

    ColoniaModelRes:
      type: object
      properties:
        colonia:
          type: string
        coloniaId:
          type: string
      tags:
        - Ubicación

    EstadoModelRes:
      type: object
      properties:
        estado:
          type: string
        estadoId:
          type: string
      tags:
        - Ubicación

    DirectionModelRes:
      type: object
      properties:
        calle:
          type: string
        numeroCasa:
          type: string
        colonia:
          $ref: '#/components/schemas/ColoniaModelRes'
        ciudad:
          $ref: '#/components/schemas/CiudadModelRes'
        estado:
          $ref: '#/components/schemas/EstadoModelRes'
        entreCalles:
          type: string
        referencia:
          type: string
      tags:
        - Ubicación

    StatusModelRes:
      type: object
      properties:
        status:
          type: string
        statusId:
          type: string
      tags:
        - General

    CustomerModelRes:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        date:
          type: string
          format: date-time
        direction:
          $ref: '#/components/schemas/DirectionModelRes'
        status:
          $ref: '#/components/schemas/StatusModelRes'
        updatedAt:
          type: string
          format: date-time
      tags:
        - Clientes

    ProductModelRes:
      type: object
      properties:
        quantity:
          type: number
        product:
          type: string
        productId:
          type: string
      tags:
        - Productos

    UserModelRes:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
      tags:
        - Usuarios

    PurchaseModelRes:
      type: object
      properties:
        id:
          type: string
        vendedor:
          $ref: '#/components/schemas/UserModelRes'
        cobrador:
          $ref: '#/components/schemas/UserModelRes'
        saleDate:
          type: string
          format: date-time
        creditPrice:
          type: number
        cashPrice:
          type: number
        cashPriceEndDate:
          type: string
          format: date-time
        collectionDate:
          type: string
          format: date-time
        collectionFrequency:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductModelRes'
        payments:
          type: array
          items:
            type: object
        status:
          $ref: '#/components/schemas/StatusModelRes'
        updatedAt:
          type: string
          format: date-time
      tags:
        - Compras

    PurchaseUpdateModel:
      type: object
      properties:
        id:
          type: string
        collectionFrequency:
          type: string
        notes:
          type: array
          items:
            type: object
        payments:
          type: array
          items:
            type: object